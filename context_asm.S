.extern cur_ctx
.globl my_yeild 


#ifdef __x86_64__

my_yeild:
	movq    cur_ctx, %rsi
        movq    %rsp, 0(%rsi)
        /* Save the callee saved registers */
        movq    %rbx, 8(%rsi)
        movq    %rbp, 16(%rsi)
        movq    %r12, 24(%rsi)
        movq    %r13, 32(%rsi)
        movq    %r14, 40(%rsi)
        movq    %r15, 48(%rsi)

my_set:
        movq    %rdi, cur_ctx /*argument will be in rdi */
        /* reload the registers */
        movq    0(%rdi), %rsp
        movq    8(%rdi), %rbx
        movq    16(%rdi), %rbp
        movq    24(%rdi), %r12
        movq    32(%rdi), %r13
        movq    40(%rdi), %r14
        movq    48(%rdi), %r15
        ret
#endif

#ifdef __i386__

my_yeild:
	movl cur_ctx, %eax
	movl 	%esp, 0(%eax)
        /* Save the callee saved registers */
	movl 	%ebx, 4(%eax)
	movl 	%ecx, 8(%eax)
	movl 	%esi, 12(%eax)
	movl 	%edi, 16(%eax)

my_set:
	movl 	4(%esp), %eax /* agrument will be on stack*/
	movl	%eax, cur_ctx
	/* reload the registers */
	movl    0(%eax), %esp
	movl    4(%eax), %ebx
	movl    8(%eax), %ecx
	movl    12(%eax), %esi
	movl    16(%eax), %edi
	ret
#endif
